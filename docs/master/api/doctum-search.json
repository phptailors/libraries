{"items":[{"t":"F","n":"Tailors\\Lib\\Context\\with","p":"Tailors/Lib/Context.html#function_with","d":"<p>Creates an executor object which invokes user function within a context.</p>"},{"t":"F","n":"Tailors\\Lib\\Error\\caller_error_handler","p":"Tailors/Lib/Error.html#function_caller_error_handler","d":"<p>A shortcut to new CallerErrorHandler(...).</p>"},{"t":"F","n":"Tailors\\Lib\\Error\\caller_exception_error_handler","p":"Tailors/Lib/Error.html#function_caller_exception_error_handler","d":"<p>Creates and returns new CallerExceptionErrorHandler.</p>"},{"t":"F","n":"Tailors\\Lib\\Error\\empty_error_handler","p":"Tailors/Lib/Error.html#function_empty_error_handler","d":"<p>A shortcut to EmptyErrorHandler::getInstance().</p>"},{"t":"F","n":"Tailors\\Lib\\Error\\error_handler","p":"Tailors/Lib/Error.html#function_error_handler","d":"<p>A shortcut to new ErrorHandler(...).</p>"},{"t":"F","n":"Tailors\\Lib\\Error\\exception_error_handler","p":"Tailors/Lib/Error.html#function_exception_error_handler","d":"<p>Creates and returns new ExceptionErrorHandler.</p>"},{"t":"C","n":"Tailors\\Lib\\Context\\AbstractManagedContextFactory","p":"Tailors/Lib/Context/AbstractManagedContextFactory.html","d":"<p>Abstract base class for managed custom context factories.</p>","f":{"n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"}},{"t":"C","n":"Tailors\\Lib\\Context\\ClassContextFactory","p":"Tailors/Lib/Context/ClassContextFactory.html","d":"<p>A factory that associates classes with context managers.</p>","f":{"n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"}},{"t":"C","n":"Tailors\\Lib\\Context\\ContextFactoryInterface","p":"Tailors/Lib/Context/ContextFactoryInterface.html","d":"<p>Interface for context managers.</p>","f":{"n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"}},{"t":"C","n":"Tailors\\Lib\\Context\\ContextFactoryStack","p":"Tailors/Lib/Context/ContextFactoryStack.html","d":"<p>A composite context factory which collects other factories and organizes\nthem into a stack.</p>","f":{"n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"}},{"t":"C","n":"Tailors\\Lib\\Context\\ContextFactoryStackInterface","p":"Tailors/Lib/Context/ContextFactoryStackInterface.html","d":"<p>A stack of instances implementing ContextFactoryInterface.</p>","f":{"n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"}},{"t":"C","n":"Tailors\\Lib\\Context\\ContextManagerInterface","p":"Tailors/Lib/Context/ContextManagerInterface.html","d":"<p>Interface for context managers.</p>","f":{"n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"}},{"t":"C","n":"Tailors\\Lib\\Context\\DefaultContextFactory","p":"Tailors/Lib/Context/DefaultContextFactory.html","d":"<p>Default context factory.</p>","f":{"n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"}},{"t":"C","n":"Tailors\\Lib\\Context\\ExecutorInterface","p":"Tailors/Lib/Context/ExecutorInterface.html","d":"<p>Interface for context managers.</p>","f":{"n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"}},{"t":"T","n":"Tailors\\Lib\\Context\\FactoryContextMethodsTrait","p":"Tailors/Lib/Context/FactoryContextMethodsTrait.html","d":"<p>Methods that any context-managed context factory should have.</p>","f":{"n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"}},{"t":"C","n":"Tailors\\Lib\\Context\\ResourceContextManager","p":"Tailors/Lib/Context/ResourceContextManager.html","d":"<p>A context manager that wraps a PHP resource and releases it at exit.</p>","f":{"n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"}},{"t":"C","n":"Tailors\\Lib\\Context\\TrivialValueWrapper","p":"Tailors/Lib/Context/TrivialValueWrapper.html","d":"<p>A trivial context manager which only wraps a single value.</p>","f":{"n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"}},{"t":"C","n":"Tailors\\Lib\\Context\\WithContextExecutor","p":"Tailors/Lib/Context/WithContextExecutor.html","d":"<p>Executes user code within a predefined context.</p>","f":{"n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"}},{"t":"C","n":"Tailors\\Lib\\Error\\AbstractErrorHandler","p":"Tailors/Lib/Error/AbstractErrorHandler.html","d":"<p>Abstract base class for error handlers.</p>","f":{"n":"Tailors\\Lib\\Error","p":"Tailors/Lib/Error.html"}},{"t":"C","n":"Tailors\\Lib\\Error\\AbstractManagedErrorHandler","p":"Tailors/Lib/Error/AbstractManagedErrorHandler.html","d":"<p>Abstract base class for context-managed error handlers.</p>","f":{"n":"Tailors\\Lib\\Error","p":"Tailors/Lib/Error.html"}},{"t":"C","n":"Tailors\\Lib\\Error\\CallerErrorHandler","p":"Tailors/Lib/Error/CallerErrorHandler.html","d":"<p>Context-managed error handler that calls user-provided function with predefined $file and $line arguments.</p>","f":{"n":"Tailors\\Lib\\Error","p":"Tailors/Lib/Error.html"}},{"t":"T","n":"Tailors\\Lib\\Error\\CallerErrorHandlerTrait","p":"Tailors/Lib/Error/CallerErrorHandlerTrait.html","d":"<p>Provides methods for CallerXxxHandler classes.</p>","f":{"n":"Tailors\\Lib\\Error","p":"Tailors/Lib/Error.html"}},{"t":"C","n":"Tailors\\Lib\\Error\\CallerExceptionErrorHandler","p":"Tailors/Lib/Error/CallerExceptionErrorHandler.html","d":"<p>Context-managed error handler that throws an exception with predefined $file and $line arguments.</p>","f":{"n":"Tailors\\Lib\\Error","p":"Tailors/Lib/Error.html"}},{"t":"T","n":"Tailors\\Lib\\Error\\ContextManagerTrait","p":"Tailors/Lib/Error/ContextManagerTrait.html","d":"<p>Context management methods for error handler classes.</p>","f":{"n":"Tailors\\Lib\\Error","p":"Tailors/Lib/Error.html"}},{"t":"C","n":"Tailors\\Lib\\Error\\EmptyErrorHandler","p":"Tailors/Lib/Error/EmptyErrorHandler.html","d":"<p>Context-managed error handler disabler.</p>","f":{"n":"Tailors\\Lib\\Error","p":"Tailors/Lib/Error.html"}},{"t":"C","n":"Tailors\\Lib\\Error\\ErrorHandler","p":"Tailors/Lib/Error/ErrorHandler.html","d":"<p>Context-managed error handler that calls user-provided function.</p>","f":{"n":"Tailors\\Lib\\Error","p":"Tailors/Lib/Error.html"}},{"t":"C","n":"Tailors\\Lib\\Error\\ErrorHandlerInterface","p":"Tailors/Lib/Error/ErrorHandlerInterface.html","d":"","f":{"n":"Tailors\\Lib\\Error","p":"Tailors/Lib/Error.html"}},{"t":"C","n":"Tailors\\Lib\\Error\\ExceptionErrorHandler","p":"Tailors/Lib/Error/ExceptionErrorHandler.html","d":"<p>An error handler which raises custom exception.</p>","f":{"n":"Tailors\\Lib\\Error","p":"Tailors/Lib/Error.html"}},{"t":"C","n":"Tailors\\Lib\\Singleton\\SingletonException","p":"Tailors/Lib/Singleton/SingletonException.html","d":"<p>An exception thrown when a singleton is used improperly.</p>","f":{"n":"Tailors\\Lib\\Singleton","p":"Tailors/Lib/Singleton.html"}},{"t":"C","n":"Tailors\\Lib\\Singleton\\SingletonInterface","p":"Tailors/Lib/Singleton/SingletonInterface.html","d":"<p>An interface implemented by singleton classes.</p>","f":{"n":"Tailors\\Lib\\Singleton","p":"Tailors/Lib/Singleton.html"}},{"t":"T","n":"Tailors\\Lib\\Singleton\\SingletonTrait","p":"Tailors/Lib/Singleton/SingletonTrait.html","d":"<p>A trait for singleton classes.</p>","f":{"n":"Tailors\\Lib\\Singleton","p":"Tailors/Lib/Singleton.html"}},{"t":"T","n":"Tailors\\Testing\\Lib\\Context\\ExpectFunctionOnceWillReturnTrait","p":"Tailors/Testing/Lib/Context/ExpectFunctionOnceWillReturnTrait.html","d":"","f":{"n":"Tailors\\Testing\\Lib\\Context","p":"Tailors/Testing/Lib/Context.html"}},{"t":"T","n":"Tailors\\Testing\\Lib\\Context\\GetContextFunctionMockTrait","p":"Tailors/Testing/Lib/Context/GetContextFunctionMockTrait.html","d":"","f":{"n":"Tailors\\Testing\\Lib\\Context","p":"Tailors/Testing/Lib/Context.html"}},{"t":"T","n":"Tailors\\Testing\\Lib\\Singleton\\AssertIsSingletonTrait","p":"Tailors/Testing/Lib/Singleton/AssertIsSingletonTrait.html","d":"","f":{"n":"Tailors\\Testing\\Lib\\Singleton","p":"Tailors/Testing/Lib/Singleton.html"}},{"t":"C","n":"Tailors\\Testing\\Lib\\Singleton\\Constraint\\IsCloneable","p":"Tailors/Testing/Lib/Singleton/Constraint/IsCloneable.html","d":"<p>Constraint that accepts object/class that is cloneable.</p>","f":{"n":"Tailors\\Testing\\Lib\\Singleton\\Constraint","p":"Tailors/Testing/Lib/Singleton/Constraint.html"}},{"t":"I","n":"Tailors\\Lib\\Context\\ContextFactoryInterface","p":"Tailors/Lib/Context/ContextFactoryInterface.html","f":{"n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"}},{"t":"I","n":"Tailors\\Lib\\Context\\ContextFactoryStackInterface","p":"Tailors/Lib/Context/ContextFactoryStackInterface.html","f":{"n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"}},{"t":"I","n":"Tailors\\Lib\\Context\\ContextManagerInterface","p":"Tailors/Lib/Context/ContextManagerInterface.html","f":{"n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"}},{"t":"I","n":"Tailors\\Lib\\Context\\ExecutorInterface","p":"Tailors/Lib/Context/ExecutorInterface.html","f":{"n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"}},{"t":"I","n":"Tailors\\Lib\\Error\\ErrorHandlerInterface","p":"Tailors/Lib/Error/ErrorHandlerInterface.html","f":{"n":"Tailors\\Lib\\Error","p":"Tailors/Lib/Error.html"}},{"t":"I","n":"Tailors\\Lib\\Singleton\\SingletonInterface","p":"Tailors/Lib/Singleton/SingletonInterface.html","f":{"n":"Tailors\\Lib\\Singleton","p":"Tailors/Lib/Singleton.html"}},{"t":"M","n":"Tailors\\Lib\\Context\\ClassContextFactory::__construct","p":"Tailors/Lib/Context/ClassContextFactory.html#method___construct","d":"<p>Initializes the object.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ClassContextFactory::getRegistry","p":"Tailors/Lib/Context/ClassContextFactory.html#method_getRegistry","d":"<p>Returns the internal registry which maps class names into their\ncorresponding context manager generators.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ClassContextFactory::register","p":"Tailors/Lib/Context/ClassContextFactory.html#method_register","d":"<p>Register new class.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ClassContextFactory::remove","p":"Tailors/Lib/Context/ClassContextFactory.html#method_remove","d":"<p>Unregister the $class.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ClassContextFactory::getContextManager","p":"Tailors/Lib/Context/ClassContextFactory.html#method_getContextManager","d":""},{"t":"M","n":"Tailors\\Lib\\Context\\ClassContextFactory::initialize","p":"Tailors/Lib/Context/ClassContextFactory.html#method_initialize","d":"<p>Initializes the object with $wrappers.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryInterface::getContextManager","p":"Tailors/Lib/Context/ContextFactoryInterface.html#method_getContextManager","d":""},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryStack::clean","p":"Tailors/Lib/Context/ContextFactoryStack.html#method_clean","d":"<p>Resets the stack to empty state.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryStack::top","p":"Tailors/Lib/Context/ContextFactoryStack.html#method_top","d":"<p>Returns the factory from the top of stack or null if the stack is empty.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryStack::push","p":"Tailors/Lib/Context/ContextFactoryStack.html#method_push","d":"<p>Pushes the $factory to the top of stack.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryStack::pop","p":"Tailors/Lib/Context/ContextFactoryStack.html#method_pop","d":"<p>Pops and returns the factory from the top of stack shortening the array\nof factories by one element.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryStack::size","p":"Tailors/Lib/Context/ContextFactoryStack.html#method_size","d":"<p>Returns the stack size.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryStack::getContextManager","p":"Tailors/Lib/Context/ContextFactoryStack.html#method_getContextManager","d":""},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryStackInterface::clean","p":"Tailors/Lib/Context/ContextFactoryStackInterface.html#method_clean","d":"<p>Resets the stack to empty state.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryStackInterface::top","p":"Tailors/Lib/Context/ContextFactoryStackInterface.html#method_top","d":"<p>Returns the factory from the top of stack or null if the stack is empty.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryStackInterface::push","p":"Tailors/Lib/Context/ContextFactoryStackInterface.html#method_push","d":"<p>Pushes the $factory to the top of stack.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryStackInterface::pop","p":"Tailors/Lib/Context/ContextFactoryStackInterface.html#method_pop","d":"<p>Pops and returns the factory from the top of stack shortening the array\nof factories by one element.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryStackInterface::size","p":"Tailors/Lib/Context/ContextFactoryStackInterface.html#method_size","d":"<p>Returns the stack size.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextManagerInterface::enterContext","p":"Tailors/Lib/Context/ContextManagerInterface.html#method_enterContext","d":"<p>Enter the runtime context and return either this object or another\nobject related to the runtime context.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextManagerInterface::exitContext","p":"Tailors/Lib/Context/ContextManagerInterface.html#method_exitContext","d":"<p>Exit the runtime context and return a Boolean flag indicating if any\nexception that occured should be suppressed.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\DefaultContextFactory::getContextManager","p":"Tailors/Lib/Context/DefaultContextFactory.html#method_getContextManager","d":""},{"t":"M","n":"Tailors\\Lib\\Context\\ExecutorInterface::__invoke","p":"Tailors/Lib/Context/ExecutorInterface.html#method___invoke","d":"<p>Invokes user function.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\FactoryContextMethodsTrait::enterContext","p":"Tailors/Lib/Context/FactoryContextMethodsTrait.html#method_enterContext","d":"<p>Pushes $this to ContextFactoryStack.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\FactoryContextMethodsTrait::exitContext","p":"Tailors/Lib/Context/FactoryContextMethodsTrait.html#method_exitContext","d":"<p>Pops from the top of ContextFactoryStack and returns <code>false</code>.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ResourceContextManager::__construct","p":"Tailors/Lib/Context/ResourceContextManager.html#method___construct","d":"<p>Initializes the context manager.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ResourceContextManager::getResource","p":"Tailors/Lib/Context/ResourceContextManager.html#method_getResource","d":"<p>Returns the resource wrapped by this context manager.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ResourceContextManager::getDestructor","p":"Tailors/Lib/Context/ResourceContextManager.html#method_getDestructor","d":"<p>Returns the destructor that is used to release the resource.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ResourceContextManager::enterContext","p":"Tailors/Lib/Context/ResourceContextManager.html#method_enterContext","d":"<p>Enter the runtime context and return either this object or another\nobject related to the runtime context.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ResourceContextManager::exitContext","p":"Tailors/Lib/Context/ResourceContextManager.html#method_exitContext","d":"<p>Exit the runtime context and return a Boolean flag indicating if any\nexception that occured should be suppressed.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\TrivialValueWrapper::__construct","p":"Tailors/Lib/Context/TrivialValueWrapper.html#method___construct","d":"<p>Initializes the object.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\TrivialValueWrapper::getValue","p":"Tailors/Lib/Context/TrivialValueWrapper.html#method_getValue","d":"<p>Returns the value provided to constructor.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\TrivialValueWrapper::enterContext","p":"Tailors/Lib/Context/TrivialValueWrapper.html#method_enterContext","d":"<p>Enter the runtime context and return either this object or another\nobject related to the runtime context.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\TrivialValueWrapper::exitContext","p":"Tailors/Lib/Context/TrivialValueWrapper.html#method_exitContext","d":"<p>Exit the runtime context and return a Boolean flag indicating if any\nexception that occured should be suppressed.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\WithContextExecutor::__construct","p":"Tailors/Lib/Context/WithContextExecutor.html#method___construct","d":"<p>Initializes the object.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\WithContextExecutor::__invoke","p":"Tailors/Lib/Context/WithContextExecutor.html#method___invoke","d":"<p>Calls user function within context.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\WithContextExecutor::getContext","p":"Tailors/Lib/Context/WithContextExecutor.html#method_getContext","d":"<p>Returns the context provided to __construct().</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\AbstractErrorHandler::__construct","p":"Tailors/Lib/Error/AbstractErrorHandler.html#method___construct","d":"<p>Initializes the object.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\AbstractErrorHandler::getErrorTypes","p":"Tailors/Lib/Error/AbstractErrorHandler.html#method_getErrorTypes","d":"<p>Returns the integer defining error types that are captured by the error\nhandler.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\AbstractManagedErrorHandler::__invoke","p":"Tailors/Lib/Error/AbstractManagedErrorHandler.html#method___invoke","d":"<p>Actual error handler function.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\CallerErrorHandler::__construct","p":"Tailors/Lib/Error/CallerErrorHandler.html#method___construct","d":"<p>Initializes the object.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\CallerErrorHandlerTrait::__invoke","p":"Tailors/Lib/Error/CallerErrorHandlerTrait.html#method___invoke","d":"{@inheritdoc}"},{"t":"M","n":"Tailors\\Lib\\Error\\CallerErrorHandlerTrait::getCallerFile","p":"Tailors/Lib/Error/CallerErrorHandlerTrait.html#method_getCallerFile","d":"<p>Returns the caller's file name as determined by the constructor.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\CallerErrorHandlerTrait::getCallerLine","p":"Tailors/Lib/Error/CallerErrorHandlerTrait.html#method_getCallerLine","d":"<p>Returns the caller's line number as determined by the constructor.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\CallerErrorHandlerTrait::initCallerErrorHandler","p":"Tailors/Lib/Error/CallerErrorHandlerTrait.html#method_initCallerErrorHandler","d":null},{"t":"M","n":"Tailors\\Lib\\Error\\CallerExceptionErrorHandler::__construct","p":"Tailors/Lib/Error/CallerExceptionErrorHandler.html#method___construct","d":"<p>Initializes the object.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\ContextManagerTrait::getErrorTypes","p":"Tailors/Lib/Error/ContextManagerTrait.html#method_getErrorTypes","d":"<p>Returns an integer used to mask the triggering of the error handler.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\ContextManagerTrait::enterContext","p":"Tailors/Lib/Error/ContextManagerTrait.html#method_enterContext","d":"<p>Sets this error handler object as error handler using PHP function\n<code>set_error_handler()</code> and returns <code>$this</code>.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\ContextManagerTrait::exitContext","p":"Tailors/Lib/Error/ContextManagerTrait.html#method_exitContext","d":"<p>Restores original error handler using PHP function\n\\restore_error_hander() and returns <code>false</code>.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\EmptyErrorHandler::__invoke","p":"Tailors/Lib/Error/EmptyErrorHandler.html#method___invoke","d":"<p>Actual error handler function.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\EmptyErrorHandler::getErrorTypes","p":"Tailors/Lib/Error/EmptyErrorHandler.html#method_getErrorTypes","d":"<p>Returns an integer used to mask the triggering of the error handler.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\ErrorHandler::__construct","p":"Tailors/Lib/Error/ErrorHandler.html#method___construct","d":"<p>Initializes the object.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\ErrorHandler::__invoke","p":"Tailors/Lib/Error/ErrorHandler.html#method___invoke","d":"<p>Actual error handler function.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\ErrorHandler::getErrorHandler","p":"Tailors/Lib/Error/ErrorHandler.html#method_getErrorHandler","d":"<p>Returns the $errorHandler provided to constructor.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\ErrorHandlerInterface::__invoke","p":"Tailors/Lib/Error/ErrorHandlerInterface.html#method___invoke","d":"<p>Actual error handler function.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\ErrorHandlerInterface::getErrorTypes","p":"Tailors/Lib/Error/ErrorHandlerInterface.html#method_getErrorTypes","d":"<p>Returns an integer used to mask the triggering of the error handler.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\ExceptionErrorHandler::__construct","p":"Tailors/Lib/Error/ExceptionErrorHandler.html#method___construct","d":"<p>Initializes the object.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\ExceptionErrorHandler::__invoke","p":"Tailors/Lib/Error/ExceptionErrorHandler.html#method___invoke","d":"<p>Actual error handler function.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\ExceptionErrorHandler::makeExceptionGenerator","p":"Tailors/Lib/Error/ExceptionErrorHandler.html#method_makeExceptionGenerator","d":"<p>Converts argument $arg to an exception generator.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\ExceptionErrorHandler::getExceptionGenerator","p":"Tailors/Lib/Error/ExceptionErrorHandler.html#method_getExceptionGenerator","d":"<p>Returns the $exceptionGenerator provided to constructor.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\ExceptionErrorHandler::getException","p":"Tailors/Lib/Error/ExceptionErrorHandler.html#method_getException","d":"<p>Creates and returns new exception using the encapsulated $exceptionGenerator.</p>"},{"t":"M","n":"Tailors\\Lib\\Singleton\\SingletonInterface::getInstance","p":"Tailors/Lib/Singleton/SingletonInterface.html#method_getInstance","d":"<p>Fetch an instance of the class.</p>"},{"t":"M","n":"Tailors\\Lib\\Singleton\\SingletonTrait::__wakeup","p":"Tailors/Lib/Singleton/SingletonTrait.html#method___wakeup","d":"<p>Singleton's __wakeup() always throws Tailors\\Lib\\Singleton\\SingletonException.</p>"},{"t":"M","n":"Tailors\\Lib\\Singleton\\SingletonTrait::getInstance","p":"Tailors/Lib/Singleton/SingletonTrait.html#method_getInstance","d":"<p>Returns the single instance of the class.</p>"},{"t":"M","n":"Tailors\\Testing\\Lib\\Context\\ExpectFunctionOnceWillReturnTrait::getContextFunctionMock","p":"Tailors/Testing/Lib/Context/ExpectFunctionOnceWillReturnTrait.html#method_getContextFunctionMock","d":null},{"t":"M","n":"Tailors\\Testing\\Lib\\Context\\ExpectFunctionOnceWillReturnTrait::expectFunctionOnceWillReturn","p":"Tailors/Testing/Lib/Context/ExpectFunctionOnceWillReturnTrait.html#method_expectFunctionOnceWillReturn","d":""},{"t":"M","n":"Tailors\\Testing\\Lib\\Context\\GetContextFunctionMockTrait::getFunctionMock","p":"Tailors/Testing/Lib/Context/GetContextFunctionMockTrait.html#method_getFunctionMock","d":""},{"t":"M","n":"Tailors\\Testing\\Lib\\Context\\GetContextFunctionMockTrait::getContextFunctionMock","p":"Tailors/Testing/Lib/Context/GetContextFunctionMockTrait.html#method_getContextFunctionMock","d":null},{"t":"M","n":"Tailors\\Testing\\Lib\\Singleton\\AssertIsSingletonTrait::assertThat","p":"Tailors/Testing/Lib/Singleton/AssertIsSingletonTrait.html#method_assertThat","d":null},{"t":"M","n":"Tailors\\Testing\\Lib\\Singleton\\AssertIsSingletonTrait::logicalNot","p":"Tailors/Testing/Lib/Singleton/AssertIsSingletonTrait.html#method_logicalNot","d":null},{"t":"M","n":"Tailors\\Testing\\Lib\\Singleton\\AssertIsSingletonTrait::assertIsSingleton","p":"Tailors/Testing/Lib/Singleton/AssertIsSingletonTrait.html#method_assertIsSingleton","d":""},{"t":"M","n":"Tailors\\Testing\\Lib\\Singleton\\AssertIsSingletonTrait::assertIsClass","p":"Tailors/Testing/Lib/Singleton/AssertIsSingletonTrait.html#method_assertIsClass","d":""},{"t":"M","n":"Tailors\\Testing\\Lib\\Singleton\\AssertIsSingletonTrait::assertIsIdempotent","p":"Tailors/Testing/Lib/Singleton/AssertIsSingletonTrait.html#method_assertIsIdempotent","d":""},{"t":"M","n":"Tailors\\Testing\\Lib\\Singleton\\AssertIsSingletonTrait::assertNotCloneable","p":"Tailors/Testing/Lib/Singleton/AssertIsSingletonTrait.html#method_assertNotCloneable","d":""},{"t":"M","n":"Tailors\\Testing\\Lib\\Singleton\\AssertIsSingletonTrait::assertThrowsSingletonExceptionOnUnserialize","p":"Tailors/Testing/Lib/Singleton/AssertIsSingletonTrait.html#method_assertThrowsSingletonExceptionOnUnserialize","d":""},{"t":"M","n":"Tailors\\Testing\\Lib\\Singleton\\AssertIsSingletonTrait::isCloneable","p":"Tailors/Testing/Lib/Singleton/AssertIsSingletonTrait.html#method_isCloneable","d":null},{"t":"M","n":"Tailors\\Testing\\Lib\\Singleton\\Constraint\\IsCloneable::toString","p":"Tailors/Testing/Lib/Singleton/Constraint/IsCloneable.html#method_toString","d":null},{"t":"M","n":"Tailors\\Testing\\Lib\\Singleton\\Constraint\\IsCloneable::matches","p":"Tailors/Testing/Lib/Singleton/Constraint/IsCloneable.html#method_matches","d":""},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryInterface::getContextManager","p":"Tailors/Lib/Context/ContextFactoryInterface.html#method_getContextManager","d":""},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryStackInterface::clean","p":"Tailors/Lib/Context/ContextFactoryStackInterface.html#method_clean","d":"<p>Resets the stack to empty state.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryStackInterface::top","p":"Tailors/Lib/Context/ContextFactoryStackInterface.html#method_top","d":"<p>Returns the factory from the top of stack or null if the stack is empty.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryStackInterface::push","p":"Tailors/Lib/Context/ContextFactoryStackInterface.html#method_push","d":"<p>Pushes the $factory to the top of stack.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryStackInterface::pop","p":"Tailors/Lib/Context/ContextFactoryStackInterface.html#method_pop","d":"<p>Pops and returns the factory from the top of stack shortening the array\nof factories by one element.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextFactoryStackInterface::size","p":"Tailors/Lib/Context/ContextFactoryStackInterface.html#method_size","d":"<p>Returns the stack size.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextManagerInterface::enterContext","p":"Tailors/Lib/Context/ContextManagerInterface.html#method_enterContext","d":"<p>Enter the runtime context and return either this object or another\nobject related to the runtime context.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ContextManagerInterface::exitContext","p":"Tailors/Lib/Context/ContextManagerInterface.html#method_exitContext","d":"<p>Exit the runtime context and return a Boolean flag indicating if any\nexception that occured should be suppressed.</p>"},{"t":"M","n":"Tailors\\Lib\\Context\\ExecutorInterface::__invoke","p":"Tailors/Lib/Context/ExecutorInterface.html#method___invoke","d":"<p>Invokes user function.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\ErrorHandlerInterface::__invoke","p":"Tailors/Lib/Error/ErrorHandlerInterface.html#method___invoke","d":"<p>Actual error handler function.</p>"},{"t":"M","n":"Tailors\\Lib\\Error\\ErrorHandlerInterface::getErrorTypes","p":"Tailors/Lib/Error/ErrorHandlerInterface.html#method_getErrorTypes","d":"<p>Returns an integer used to mask the triggering of the error handler.</p>"},{"t":"M","n":"Tailors\\Lib\\Singleton\\SingletonInterface::getInstance","p":"Tailors/Lib/Singleton/SingletonInterface.html#method_getInstance","d":"<p>Fetch an instance of the class.</p>"},{"t":"N","n":"Tailors","p":"Tailors.html"},{"t":"N","n":"Tailors\\Lib","p":"Tailors/Lib.html"},{"t":"N","n":"Tailors\\Lib\\Context","p":"Tailors/Lib/Context.html"},{"t":"N","n":"Tailors\\Lib\\Error","p":"Tailors/Lib/Error.html"},{"t":"N","n":"Tailors\\Lib\\Singleton","p":"Tailors/Lib/Singleton.html"},{"t":"N","n":"Tailors\\Testing","p":"Tailors/Testing.html"},{"t":"N","n":"Tailors\\Testing\\Lib","p":"Tailors/Testing/Lib.html"},{"t":"N","n":"Tailors\\Testing\\Lib\\Context","p":"Tailors/Testing/Lib/Context.html"},{"t":"N","n":"Tailors\\Testing\\Lib\\Singleton","p":"Tailors/Testing/Lib/Singleton.html"},{"t":"N","n":"Tailors\\Testing\\Lib\\Singleton\\Constraint","p":"Tailors/Testing/Lib/Singleton/Constraint.html"}]}
